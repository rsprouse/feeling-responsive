# This action builds the CLA website and copies the files to the public
# web server when a release is created on github.

# In order for this action to work several environment variables must be
# defined as github secrets:

# DEPLOY_HOST: hostname of the public web server where the website will
#    be copied via rsync, e.g. linguistics.berkeley.edu
# DEPLOY_USER: username to be used for rsync on DEPLOY_HOST,
#    e.g. cla_deployer
# DEPLOY_PATH_PROD: filepath on DEPLOY_HOST where the production release
#    website will be copied, e.g. /home/sites/cla_public_jekyll/public_html
# DEPLOY_PATH_DEV: filepath on DEPLOY_HOST where the development
#    website will be copied, e.g. /home/sites/cla_public_trill/public_html
# GOOGLE_MAPS_API_KEY: developer key for Google Maps API, to be inserted
#    into website code
# SSH_KNOWN_HOSTS: List of known keys for DEPLOY_HOST, as generated by e.g.
#    `ssh-keyscan linguistics.berkeley.edu`
# SSH_PRIVATE_KEY: private key for DEPLOY_USER on DEPLOY_HOST. The key
#    must exist in DEPLOY_USER's `authorized_keys` file on DEPLOY_HOST.
#    PEM-encoded RSA keys are known to work and can be created with e.g.
#    `ssh-keygen -t rsa -b 4096 -m PEM`, and the private key can then
#    be copied to DEPLOY_HOST.


name: Build production CLA website with Jekyll and deploy to server

on:
  release:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
      DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
 
    steps:
      - uses: actions/checkout@v2

      # Use GitHub Actions' cache to shorten build times and decrease load on servers
#      - uses: actions/cache@v2
#        with:
#          path: vendor/bundle
#          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile') }}
#          restore-keys: |
#            ${{ runner.os }}-gems-

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
          bundler-cache: true
      - run: bundle exec jekyll build --config _config.yml

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
      - name: Set deployment path
        run:
          echo "DEPLOY_PATH=${{ secrets.DEPLOY_PATH_PROD }}" >> $GITHUB_ENV
      - name: Publish to public web server with rsync over ssh
        run: |
          pwd
          ls -al
          ls -alR _site
          rsync -a _site/* ${DEPLOY_USER}@${DEPLOY_HOST}:${DEPLOY_PATH}

